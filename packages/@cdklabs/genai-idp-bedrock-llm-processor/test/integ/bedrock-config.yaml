# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

notes: Bedrock-based OCR configuration for Pattern 2 testing with Claude 3.5 Sonnet
ocr:
  backend: "bedrock"  # Using Bedrock for OCR instead of Textract
  model_id: "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
  system_prompt: "You are an expert OCR system. Extract all text from the provided image accurately, preserving layout where possible."
  task_prompt: "Extract all text from this document image. Preserve the layout, including paragraphs, tables, and formatting."
  image:
    dpi: 150
    target_width: 1200
    target_height: 1600
    preprocessing: false
classes:
  - name: Payslip
    description: >-
      An employee wage statement showing earnings, deductions, taxes, and net pay for a specific pay period, 
      typically issued by employers to document compensation details including gross pay, various tax withholdings, 
      and year-to-date totals.
    attributes:
      - name: YTDNetPay
        description: >-
          Year-to-date net pay amount representing cumulative take-home earnings after all deductions 
          from the beginning of the year to the current pay period.
        evaluation_method: NUMERIC_EXACT
        attributeType: simple
      - name: PayPeriodStartDate
        description: >-
          The beginning date of the pay period covered by this payslip, indicating when the earning 
          period started for the compensation shown.
        evaluation_method: EXACT
        attributeType: simple
      - name: PayPeriodEndDate
        description: >-
          The ending date of the pay period covered by this payslip, indicating when the earning 
          period ended for the compensation shown.
        evaluation_method: EXACT
        attributeType: simple
      - name: PayDate
        description: >-
          The actual date when the employee was paid, representing when the compensation was issued 
          or deposited.
        evaluation_method: EXACT
        attributeType: simple
      - name: CurrentGrossPay
        description: >-
          The total earnings before any deductions for the current pay period, representing gross 
          compensation for the period.
        evaluation_method: NUMERIC_EXACT
        attributeType: simple
      - name: YTDGrossPay
        description: >-
          Year-to-date gross pay representing cumulative earnings before deductions from the 
          beginning of the year to the current pay period.
        evaluation_method: NUMERIC_EXACT
        attributeType: simple
      - name: CurrentNetPay
        description: >-
          The take-home pay after all deductions for the current pay period, representing the 
          actual amount paid to the employee.
        evaluation_method: NUMERIC_EXACT
        attributeType: simple
      - name: EmployeeNumber
        description: >-
          The unique identifier assigned to the employee by the employer for payroll and 
          administrative purposes.
        evaluation_method: EXACT
        attributeType: simple
      - name: EmployeeName
        groupAttributes:
          - name: FirstName
            description: The given name of the employee.
            evaluation_method: EXACT
          - name: LastName
            description: The family name or surname of the employee.
            evaluation_method: EXACT
          - name: MiddleName
            description: The middle name or initial of the employee.
            evaluation_method: EXACT
        description: >-
          The complete name information of the employee, including first name, middle name, 
          and last name.
        evaluation_method: LLM
        attributeType: group

  - name: Bank-Statement
    description: >-
      A periodic financial document issued by banks detailing account activity, balances, 
      and transactions over a specific time period, providing account holders with a summary 
      of their financial activity and current account status.
    attributes:
      - name: account_holder_name
        description: >-
          The name of the person or entity who owns the bank account, as registered 
          with the financial institution.
        evaluation_method: EXACT
        attributeType: simple
      - name: account_number
        description: >-
          The unique identifier for the bank account, often partially masked for security 
          purposes on the statement.
        evaluation_method: EXACT
        attributeType: simple
      - name: statement_start_date
        description: >-
          The beginning date of the statement period in MM/DD/YYYY format, indicating 
          when the reporting period began.
        evaluation_method: EXACT
        attributeType: simple
      - name: statement_end_date
        description: >-
          The ending date of the statement period in MM/DD/YYYY format, indicating when 
          the reporting period concluded.
        evaluation_method: EXACT
        attributeType: simple
      - name: bank_name
        description: >-
          The name of the financial institution issuing the statement, typically displayed 
          prominently at the top of the document.
        evaluation_method: EXACT
        attributeType: simple
      - name: transaction_details
        listItemTemplate:
          itemAttributes:
            - name: date
              description: The date when the transaction occurred.
              evaluation_method: EXACT
            - name: description
              description: Description of the transaction or merchant information.
              evaluation_method: EXACT
            - name: amount
              description: Amount of the transaction (positive for deposits, negative for withdrawals).
              evaluation_method: NUMERIC_EXACT
            - name: balance
              description: The account balance after this transaction.
              evaluation_method: NUMERIC_EXACT
          itemDescription: Each item represents an individual transaction record
        description: >-
          Detailed listing of all transactions that occurred during the statement period, 
          including deposits, withdrawals, and resulting account balances.
        evaluation_method: LLM
        attributeType: list

classification:
  image:
    target_width: 951
    target_height: 1268
  model: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  classificationMethod: multimodalPageLevelClassification
  temperature: 0.0
  top_k: 5
  top_p: 0.1
  max_tokens: 4096
  system_prompt: >-
    You are a multimodal document classification expert that analyzes business documents using both visual layout and textual content. Your task is to classify single-page documents into predefined categories based on their structural patterns, visual features, and text content. Your output must be valid JSON according to the requested format.

    <variables>
    DOCUMENT_TEXT: OCR-extracted text content from the document page that provides textual information for classification
    DOCUMENT_IMAGE: Visual representation of the document page that provides layout, formatting, and visual structure information
    CLASS_NAMES_AND_DESCRIPTIONS: List of valid document types with their descriptions that the document must be classified into
    </variables>
  task_prompt: >-
    <task-description>
    Analyze the provided document using both its visual layout and textual content to determine its document type. You must classify it into exactly one of the predefined categories.
    </task-description>

    <document-types>
    {CLASS_NAMES_AND_DESCRIPTIONS}
    </document-types>

    <classification-instructions>
    Follow these steps to classify the document:
    1. Examine the visual layout: headers, logos, formatting, structure, and visual organization
    2. Analyze the textual content: key phrases, terminology, purpose, and information type
    3. Identify distinctive features that match the document type descriptions
    4. Consider both visual and textual evidence together to determine the best match
    5. CRITICAL: Only use document types explicitly listed in the <document-types> section
    </classification-instructions>

    <reasoning-guidelines>
    When determining the document type:
    - First identify the document's primary purpose and function
    - Note specific visual elements (letterhead, forms, tables, signatures)
    - Identify key textual indicators (terminology, phrases, structure)
    - Consider the document's intended audience and use case
    - Provide specific evidence from both visual and textual analysis
    </reasoning-guidelines>

    <output-format>
    Return your classification as valid JSON following this exact structure:
    {
      "classification_reason": "Detailed reasoning including specific visual and textual evidence that led to this classification",
      "class": "exact_document_type_from_list"
    }
    </output-format>

    <<CACHEPOINT>>

    <document-ocr-data>
    {DOCUMENT_TEXT}
    </document-ocr-data>

    <document-image>
    {DOCUMENT_IMAGE}
    </document-image>

    <final-instructions>
    Analyze the document above by:
    1. Applying the <classification-instructions> to examine both visual and textual features
    2. Following the <reasoning-guidelines> to build your classification rationale
    3. Selecting ONLY from document types in <document-types>
    4. Providing clear reasoning with specific evidence before the classification
    5. Outputting in the exact JSON format specified in <output-format>
    </final-instructions>

extraction:
  image:
    target_width: 951
    target_height: 1268
  model: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  temperature: 0.0
  top_k: 5
  top_p: 0.1
  max_tokens: 10000
  system_prompt: >-
    You are a document assistant. Respond only with JSON. Never make up data, only provide data found in the document being provided.
  task_prompt: >-
    <background>
    
    You are an expert in document analysis and information extraction. 
    You can understand and extract key information from documents classified as type 

    {DOCUMENT_CLASS}.

    </background>


    <task>

    Your task is to take the unstructured text provided and convert it into a well-organized table format using JSON. Identify the main entities, attributes, or categories mentioned in the attributes list below and use them as keys in the JSON object. 
    Then, extract the relevant information from the text and populate the corresponding values in the JSON object.

    </task>


    <extraction-guidelines>

    Guidelines:
        1. Ensure that the data is accurately represented and properly formatted within
        the JSON structure
        2. Include double quotes around all keys and values
        3. Do not make up data - only extract information explicitly found in the
        document
        4. Do not use /n for new lines, use a space instead
        5. If a field is not found or if unsure, return null
        6. All dates should be in MM/DD/YYYY format
        7. Do not perform calculations or summations unless totals are explicitly given
        8. If an alias is not found in the document, return null
        9. Guidelines for checkboxes:
         9.A. CAREFULLY examine each checkbox, radio button, and selection field:
            - Look for marks like ✓, ✗, x, filled circles (●), darkened areas, or handwritten checks indicating selection
            - For checkboxes and multi-select fields, ONLY INCLUDE options that show clear visual evidence of selection
            - DO NOT list options that have no visible selection mark
         9.B. For ambiguous or overlapping tick marks:
            - If a mark overlaps between two or more checkboxes, determine which option contains the majority of the mark
            - Consider a checkbox selected if the mark is primarily inside the check box or over the option text
            - When a mark touches multiple options, analyze which option was most likely intended based on position and density. For handwritten checks, the mark typically flows from the selected checkbox outward.
            - Carefully analyze visual cues and contextual hints. Think from a human perspective, anticipate natural tendencies, and apply thoughtful reasoning to make the best possible judgment.
        10. Think step by step first and then answer.

    </extraction-guidelines>

    If the attributes section below contains a list of attribute names and
    descriptions, then output only those attributes, using the provided
    descriptions as guidance for finding the correct values. 

    <attributes>

    {ATTRIBUTE_NAMES_AND_DESCRIPTIONS}

    </attributes>


    <<CACHEPOINT>>


    <document-text>

    {DOCUMENT_TEXT}

    </document-text>
  

    <document_image>

    {DOCUMENT_IMAGE}

    </document_image>


    <final-instructions>

    Extract key information from the document and return a JSON object with the following key steps:
    1. Carefully analyze the document text to identify the requested attributes
    2. Extract only information explicitly found in the document - never make up data
    3. Format all dates as MM/DD/YYYY and replace newlines with spaces
    4. For checkboxes, only include options with clear visual selection marks
    5. Use null for any fields not found in the document
    6. Ensure the output is properly formatted JSON with quoted keys and values
    7. Think step by step before finalizing your answer

    </final-instructions>

assessment:
  image:
    target_width: 951
    target_height: 1268
  granular:
    enabled: true
    max_workers: 10
    simple_batch_size: 3
    list_batch_size: 1
  default_confidence_threshold: 0.8
  model: us.amazon.nova-lite-v1:0
  temperature: 0.0
  top_k: 5
  top_p: 0.1
  max_tokens: 10000
  system_prompt: >-
    You are a document analysis assessment expert. Your task is to evaluate the confidence of extraction results by analyzing the source document evidence. Respond only with JSON containing confidence scores for each extracted attribute.
  task_prompt: >-
    <background>

    You are an expert document analysis assessment system. Your task is to evaluate the confidence of extraction results for a document of class {DOCUMENT_CLASS}.

    </background>


    <task>

    Analyze the extraction results against the source document and provide confidence assessments for each extracted attribute. Consider factors such as:

    1. Text clarity and OCR quality in the source regions
    2. Alignment between extracted values and document content
    3. Presence of clear evidence supporting the extraction
    4. Potential ambiguity or uncertainty in the source material
    5. Completeness and accuracy of the extracted information

    </task>


    <assessment-guidelines>

    For each attribute, provide:
    A confidence score between 0.0 and 1.0 where:
       - 1.0 = Very high confidence, clear and unambiguous evidence
       - 0.8-0.9 = High confidence, strong evidence with minor uncertainty
       - 0.6-0.7 = Medium confidence, reasonable evidence but some ambiguity
       - 0.4-0.5 = Low confidence, weak or unclear evidence
       - 0.0-0.3 = Very low confidence, little to no supporting evidence

    Guidelines:
    - Base assessments on actual document content and OCR quality
    - Consider both text-based evidence and visual/layout clues
    - Account for OCR confidence scores when provided
    - Be objective and specific in reasoning
    - If an extraction appears incorrect, score accordingly with explanation

    </assessment-guidelines>

    <final-instructions>

    Analyze the extraction results against the source document and provide confidence assessments. Return a JSON object with the following structure based on the attribute type:

    For SIMPLE attributes:
    {
      "simple_attribute_name": {
        "confidence": 0.85,
      }
    }

    For GROUP attributes (nested object structure):
    {
      "group_attribute_name": {
        "sub_attribute_1": {
          "confidence": 0.90,
        },
        "sub_attribute_2": {
          "confidence": 0.75,
        }
      }
    }

    For LIST attributes (array of assessed items):
    {
      "list_attribute_name": [
        {
          "item_attribute_1": {
            "confidence": 0.95,
          },
          "item_attribute_2": {
            "confidence": 0.88,
          }
        }
      ]
    }

    IMPORTANT: 
    - For LIST attributes, assess EACH individual item in the list separately
    - Each item should be assessed as a separate object in the array
    - Do NOT provide aggregate assessments for list items - assess each one individually
    - Include assessments for ALL attributes present in the extraction results
    - Match the exact structure of the extracted data

    </final-instructions>

    <<CACHEPOINT>>

    <document-image>

    {DOCUMENT_IMAGE}

    </document-image>

    <ocr-text-confidence-results>

    {OCR_TEXT_CONFIDENCE}

    </ocr-text-confidence-results>

    <<CACHEPOINT>>

    <attributes-definitions>

    {ATTRIBUTE_NAMES_AND_DESCRIPTIONS}

    </attributes-definitions>

    <extraction-results>

    {EXTRACTION_RESULTS}

    </extraction-results>

summarization:
  model: us.amazon.nova-pro-v1:0
  temperature: 0.0
  top_k: 5
  top_p: 0.1
  max_tokens: 4096
  system_prompt: >-
    You are a document summarization expert who can analyze and summarize documents from various domains including medical, financial, legal, and general business documents. Your task is to create a summary that captures the key information, main points, and important details from the document. Your output must be in valid JSON format. 
    Summarization Style: Balanced
    Create a balanced summary that provides a moderate level of detail. Include the main points and key supporting information, while maintaining the document's overall structure. Aim for a comprehensive yet concise summary.
    Your output MUST be in valid JSON format with markdown content. You MUST strictly adhere to the output format specified in the instructions.
  task_prompt: >-
    <document-text>

    {DOCUMENT_TEXT}

    </document-text>

    Analyze the provided document (<document-text>) and create a comprehensive summary.

    CRITICAL INSTRUCTION: You MUST return your response as valid JSON with the
    EXACT structure shown at the end of these instructions. Do not include any
    explanations, notes, or text outside of the JSON structure.

    Create a summary that captures the essential information from the document.
    Your summary should:

    1. Extract key information, main points, and important details

    2. Maintain the original document's organizational structure where
    appropriate

    3. Preserve important facts, figures, dates, and entities

    4. Reduce the length while retaining all critical information

    5. Use markdown formatting for better readability (headings, lists,
    emphasis, etc.)

    6. Cite all relevant facts from the source document using inline citations
    in the format [Cite-X, Page-Y] where X is a sequential citation number and Y
    is the page number

    7. Format citations as markdown links that reference the full citation list
    at the bottom of the summary
      Example: [[Cite-1, Page-3]](#cite-1-page-3)

    8. At the end of the summary, include a "References" section that lists all
    citations with their exact text from the source document in the format:
      [Cite-X, Page-Y]: Exact text from the document

    Output Format:

    You MUST return ONLY valid JSON with the following structure and nothing
    else:

    ```json
    {
      "summary": "A comprehensive summary in markdown format with inline citations linked to a references section at the bottom"
    }
    ```

    Do not include any text, explanations, or notes outside of this JSON
    structure. The JSON must be properly formatted and parseable.

evaluation:
  llm_method:
    model: us.anthropic.claude-3-haiku-20240307-v1:0
    temperature: 0.0
    top_k: 5
    top_p: 0.1
    max_tokens: 4096
    system_prompt: >-
      You are an evaluator that helps determine if the predicted and expected values match for document attribute extraction. You will consider the context and meaning rather than just exact string matching.
    task_prompt: >-
      I need to evaluate attribute extraction for a document of class: {DOCUMENT_CLASS}.


      For the attribute named "{ATTRIBUTE_NAME}" described as "{ATTRIBUTE_DESCRIPTION}":

      - Expected value: {EXPECTED_VALUE}

      - Actual value: {ACTUAL_VALUE}


      Do these values match in meaning, taking into account formatting differences, word order, abbreviations, and semantic equivalence?

      Provide your assessment as a JSON with three fields:

      - "match": boolean (true if they match, false if not)

      - "score": number between 0 and 1 representing the confidence/similarity score

      - "reason": brief explanation of your decision


      Respond ONLY with the JSON and nothing else. Here's the exact format:

      {
        "match": true or false,
        "score": 0.0 to 1.0,
        "reason": "Your explanation here"
      }

pricing:
  - name: bedrock/us.anthropic.claude-3-5-sonnet-20241022-v2:0
    units:
      - name: inputTokens
        price: 3.0E-6
      - name: outputTokens
        price: 1.5E-5
      - name: cacheReadInputTokens
        price: 3.0E-7
      - name: cacheWriteInputTokens
        price: 3.75E-6
  - name: bedrock/us.amazon.nova-lite-v1:0
    units:
      - name: inputTokens
        price: 6.0E-8
      - name: outputTokens
        price: 2.4E-7
      - name: cacheReadInputTokens
        price: 1.5E-8
      - name: cacheWriteInputTokens
        price: 6.0E-8
  - name: bedrock/us.amazon.nova-pro-v1:0
    units:
      - name: inputTokens
        price: 8.0E-7
      - name: outputTokens
        price: 3.2E-6
      - name: cacheReadInputTokens
        price: 2.0E-7
      - name: cacheWriteInputTokens
        price: 8.0E-7
  - name: bedrock/us.anthropic.claude-3-haiku-20240307-v1:0
    units:
      - name: inputTokens
        price: 2.5E-7
      - name: outputTokens
        price: 1.25E-6
